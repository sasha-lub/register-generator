#foreach($register in $registers)
    class $register.name extends uvm_reg;
        `uvm_object_utils( $register.name )

        #foreach($field in $registerFields)
            rand uvm_reg_field $field.name;
        #end

        function new( string name = "$register.name" );
            super.new( .name( name ), .n_bits( $size ), .has_coverage($register.coverageMode));
        endfunction: new

        virtual function void build();
        #foreach($field in $registerFields)
            $field.name = uvm_reg_field::type_id::create("$field.name");
            $field.name.configure( .parent       (this),
                      .size                    ($field.size),
                      .lsb_pos                 ($field.pos),
                      .access                  ("$field.access"),
                      .volatile                ($field.volatile),
                      .reset                   ($field.reset),
                      .has_reset               ($field.hasReset),
                      .is_rand                 ($field.isRand),
                      .individually_accessible ($field.individuallyAccessible));
        #end
        endfunction: build
    endclass: $register.name
#end
â€ƒ
